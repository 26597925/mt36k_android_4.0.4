<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8"/>
<meta name="format-detection" content="telephone=no"/>
<title>银行卡绑定</title>
<style type="text/css">
* { margin: 0; padding: 0; }
.main { width: 1280px; height: 720px; margin: 0 auto; text-align: left; background: url( ../img/bg2.jpg ) no-repeat center top; position: relative; }
.tit { position: absolute; left: 99px; top: 120px; color: #FFFFFF; font-family: '黑体'; font-size: 30px; }
.step { position: absolute; left: 118px; top: 180px; }
.bang_new { position: absolute; left: 578px; top: 475px; }
.go_home { position: absolute; left: 1132px; top: 674px; }
/*this*/
.tijiao { position: absolute; left: 412px; top: 536px; }
.prev { position: absolute; left: 751px; top: 512px; }
.bcc1 { position: absolute; left: 246px; top: 336px; }
.bcc2 { position: absolute; left: 421px; top: 328px; width: 359px; }
.bcc6 { position: absolute; left: 304px; top: 400px; width: 158px; }
.bcc4 { position: absolute; left: 421px; top: 395px; width: 396px; }
.bcc5 { position: absolute; left: 821px; top: 459px; width: 183px; }
.bcc1, .bcc2, .bcc3, .bcc4, .bcc5, .bcc6 { color: #464646; font-family: "黑体"; font-size: 40px; }
.bcc5 { font-size: 20px; }
.pass { width: 350px; height: 40px; line-height: 40px; font-family: "黑体"; font-size: 30px; color: #464646; border: none; background: url( ../img/text_phone_1.png ) no-repeat; }
.top_img { position: absolute; left: 114px; top: 189px; }
.ying { position: absolute; left: 187px; top: 255px; }
.jie { position: absolute; left: 416px; top: 244px; }
.cvn { position: absolute; left: 783px; top: 336px; color: #464646; font-family: "黑体"; font-size: 30px; }
.cvn_num { position: absolute; left: 863px; top: 329px; width: 114px; }
.yan { position: absolute; left: 247px; top: 469px; color: #464646; font-family: "黑体"; font-size: 30px; }
.yan_num { position: absolute; left: 421px; top: 462px; width: 209px; }
.huo { position: absolute; left: 580px; top: 464px; }
.fang { position: absolute; left: 640px; top: 536px; }
.tit { position: absolute; left: 520px; top: 121px; color: #FFFFFF; font-family: '黑体'; font-size: 48px; width: 308px; height: 52px; }
.step { position: absolute; left: 118px; top: 180px; }
.bang_new { position: absolute; left: 578px; top: 475px; }
.go_home { position: absolute; left: 1121px; top: 636px; }
/*this*/
.tijiao { position: absolute; left: 350px; top: 575px; }
.prev { position: absolute; left: 751px; top: 512px; }
.bcc1 { position: absolute; left: 183px; top: 329px; }
.bcc2 { position: absolute; left: 421px; top: 328px; width: 359px; }
.bcc3 { position: absolute; left: 144px; top: 403px; width: 280px; }
.bcc4 { position: absolute; left: 421px; top: 395px; width: 396px; }
.pass { width: 350px; height: 40px; line-height: 40px; font-family: "黑体"; font-size: 30px; color: #464646; border: none; background: url( ../img/text_phone_1.png ) no-repeat; }
.top_img { position: absolute; left: 118px; top: 180px; }
.ying { position: absolute; left: 131px; top: 251px; }
.jie { position: absolute; left: 353px; top: 257px; }
.cvn { position: absolute; left: 783px; top: 336px; color: #464646; font-family: '黑体'; font-size: 40px; }
.cvn_num { position: absolute; left: 910px; top: 329px; width: 114px; }
.yan { position: absolute; left: 185px; top: 469px; color: #464646; font-family: '黑体'; font-size: 40px; }
.yan_num { position: absolute; left: 421px; top: 462px; width: 209px; }
.fang { position: absolute; left: 716px; top: 575px; }
.debt_card_num, .debt_card_password, .credit_card_num { width: 350px; height: 50px; line-height: 50px; font-family: "黑体"; font-size: 30px; color: #ffffff; border: none; background:#044d63; }
.mobile_code { width: 150px; height: 50px; line-height: 50px; font-family: "黑体"; font-size: 30px; color: #ffffff; border: none; background:#044d63; }
.cvn_num { width: 80px; height: 40px; line-height: 40px; font-family: "黑体"; font-size: 30px; color: #464646; border: none; background: url( ../img/text_phone_1.png ) no-repeat; }
.month, .year { width: 60px; height: 50px; line-height: 50px; font-family: "黑体"; font-size: 40px; color: #ffffff; border: none; background:#044d63; }
.cvn2_num { width: 80px; height: 50px; line-height: 50px; font-family: "黑体"; font-size: 40px; color: #ffffff; border: none; background:#044d63; }
.debt_card_div { position:absolute; top:303px; left:132px; height:230px; width:1020px; background: url( ../img/bg_debt_card_div.png ) no-repeat; }
.errorInfo{position: absolute; left: 821px; top: 395px; width: 300px; font-size:36px;color: #ff0000;}


</style>
</head>
<body>
<div class="main">
	<div class="tit">银行卡绑定</div>
	<div class="debt_card_div"></div>
	<div id="debt_card_div" >
		<div class="ying" style="top:257px;">
			<a href="javascript:return false" onClick="changeDiv(1);"><img src="../img/Credit_card_pay_n.png"  /></a>
		</div>
		<div class="jie" style="top:249px;"><img src="../img/card_pay_s.png"/></div>
		<div class="bcc1">借记卡卡号：</div>
		<div class="bcc2" id="DebtCardDIV"></div>
		<div class="bcc6">密码：</div>
		<div class="bcc4" id="DebtPinDIV"></div>
		<div id="keybord"
             style="position:absolute;display:none; width:297px; height:246px; left: 820px; top: 280px; background:url(../img/vk/dw.png) no-repeat;z-index:999">
			<div style="z-index:998;position:absolute; left: 58px; top: 13px;"><img src="../img/vk/anquanmima.png"/> </div>
			<div id="keynum" style="position:absolute; left: 20px; top: 50px; height: 119px; width: 267px;"> </div>
			<div style="position:absolute; left: 19px; top: 191px;"><span id="keyBackID"></span> &nbsp;<span id="keyOKID"></span></div>
		</div>
	</div>
	<div id="credit_card_div" style=" display:none;">
		<div class="ying"><img src="../img/Credit_card_pay_s.png"/></div>
		<div class="jie">
			<a href="javascript:return false" onClick="changeDiv(0);"  onfocus="keyBoard.close()"><img src="../img/card_pay_n.png"  onfocus="keyBoard.close()"/></a>
		</div>
		<div class="bcc1">信用卡卡号：</div>
		<div class="bcc2" id="CreditCardDIV"></div>
		<div class="cvn">CVN2:</div>
		<div class="cvn_num" id="CreditCardCVN2"> </div>
		<div class="bcc3">信用卡有效期：</div>
		<div class="bcc4"> <span id="CreditCardMonth"></span><span> 月 </span><span id="CreditCardYear"></span><span> 年</span> </div>
	</div>
	<div class="yan">手机验证码：</div>
	<div class="yan_num" id="SMSCodeDIV"></div>
	<div class="huo">
		<a id="sms_send_button" href="javascript:return false" onClick="sendSmsVerifyCode();"  onfocus="keyBoard.close()"><img src="../img/mb_huo.png"  onfocus="keyBoard.close()"/></a>
		<span id="smshint"></span> </div>
	<div class="bcc5"></div>
	<div class="errorInfo" id="errorInfo"><!-- 报错信息 --></div>
	<div class="tijiao">
		<a  id="submit_button" href="javascript:return false" onClick="bindCard();"  onfocus="keyBoard.close()"><img src="../img/ok.png"  onfocus="keyBoard.close()"/></a>
	</div>
	<div class="fang">
        <a  href="javascript:return false" onClick="goBack('./cardBinding.jsp')" onfocus="keyBoard.close()"><img src="../img/backshang.png"  onfocus="keyBoard.close()"/></a>
	</div>
	<div class="go_home">
		 <a  href="javascript:return false" onClick="redirect.goto(backURL)"   onfocus="keyBoard.close()"><img src="../img/back_home.png"  onfocus="keyBoard.close()"/></a>
	</div>
</div>
<input type="hidden" id="bindType" value="0"/>
<script type="text/javascript">
//com
var monthLengthOfNormalYear = new Array(31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31); //days of month in normal year
var monthLengthOfLeapYear = new Array(31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31); //days of month in leap year

var request = {
	    getParameter : function(paras) {
	    	  var encodeUrl = decodeURI(decodeURI(window.location.href));
   
        var url = encodeUrl.substr(encodeUrl.indexOf("?"));
        
	    	var paraString = url.substring(url.indexOf("?")+1,url.length).split("&");   
	    	var paraObj = {}   
	    	for (i=0; j=paraString[i]; i++){   
	    	paraObj[j.substring(0,j.indexOf("="))] = j.substring(j.indexOf 
	    	("=")+1,j.length);   
	    	}   
	    	var returnValue = paraObj[paras];   
	    	if(typeof(returnValue)=="undefined"){   
	    	return "";   
	    	}else{   
	    	return unescape(returnValue);   
	    	}   
	    }
	}


var redirect = {
    param : "",
    setParameter: function(name, value) {
        if(value==null) return;
        this.param += this.param.length == 0 ? "?" : "&";
        this.param += (name + "=" + escape(encodeURI(value)) );
    },

    goto : function(url) {
     if(url.indexOf("?")<=0){
    		window.location.href = url + (this.param);
    	}else{
    		//如果url带?号的话，后面的参数直接&加上参数
    		if(this.param.length>0){
    			window.location.href = url + (this.param).replace('?','&');
    		}else{
    			window.location.href = url + (this.param);
    		}
    	}
    }
}

//验证是否为空
function checkNull(str, controlName) {
    if (str == null || str.trim() == "" || str.trim().length == 0) {
        //alert(controlName + "不能为空！");
        return false;
    }
    return true;
}

//通过字符串截取获取xml指定域的值，只支持单个匹配
function getElementsFromXml(xml, tag) {
    var startTag = "<" + tag + ">";
    var endTag = "</" + tag + ">";
    var startIndex = xml.indexOf(startTag);
    var endIndex = xml.indexOf(endTag);
    var xmlValue = xml.substring(startIndex + startTag.length, endIndex);
    return xmlValue;
}

var hint = {
    idFucArr:{},
    addFunc:function(id,tarId){
       this.idFucArr[id] = tarId;
    },
    clean: function(obj) {
        document.getElementById(this.idFucArr[obj.getAttribute("id")]).innerHTML = '';
    },
    show: function(id, message) {
        document.getElementById(id).innerHTML = message;
    }
}

//pro
var CARD_TYPE_XPATH = request.getParameter("CARD_TYPE_XPATH");
var CARD_NO_FMTED_XPATH = request.getParameter("CARD_NO_FMTED_XPATH");
var HOST_URL = request.getParameter("HOST_URL");
var IPADDR = request.getParameter("IPADDR");
var PORT = request.getParameter("PORT");
var TIMEOUT = request.getParameter("TIMEOUT");
var ORDERNUM = "";
var TRACENUM = "";
var DATE="";
var TERMSTATUS = request.getParameter("TERMSTATUS");
var PUBKEYINDEX = request.getParameter("PUBKEYINDEX");
var TERMTYPEID = request.getParameter("TERMTYPEID");
var CHINFONAME = request.getParameter("CHINFONAME");
var CHANNELTYPE = request.getParameter("CHANNELTYPE");
var MERID = request.getParameter("MERID");
var TERMID = request.getParameter("TERMID");
var FWDBIN = request.getParameter("FWDBIN");
var ACQBIN = request.getParameter("ACQBIN");
var TP = request.getParameter("TP");
var MERNAME = request.getParameter("MERNAME");
var MERID4MOBILE = request.getParameter("MERID4MOBILE");
var TERMID4MOBILE = request.getParameter("TERMID4MOBILE");
var ACQBIN4MOBILE = request.getParameter("ACQBIN4MOBILE");
var TVPayTransManager = {
    init: function(id,objectName){
        document.getElementById(id).innerHTML = "<embed id=\""+objectName+"\" type=\"application/x-ctvpayplugin\" width='0' height='0'></embed>";
    }
}
//银行卡绑定
function cardBinding(termUnitNo, userID, mobile, certiCode, cardId, cardType, cardPassword,cardExpireDate,cardCVN2,tranCheckMode,secRelContInfo,entryCode,dynamicPasswd,certType){
	var msgstr =  "<?xml version='1.0' encoding='UTF-8' ?><TVPay><TVPaybody><Msg><version>1000</version><typeID>0100</typeID></Msg><TermStatus>0</TermStatus><ProcessingCode>930000</ProcessingCode><PosCondCode>00</PosCondCode><xclass>TC</xclass><orderNum>"+ORDERNUM+"</orderNum><acctNum>"+cardId+"</acctNum><cardType>"+cardType+"</cardType><safetyVerifyMode>2</safetyVerifyMode><EntryCode>"+entryCode+"</EntryCode><Merchant><termUnitNo>"+termUnitNo+"</termUnitNo><termTypeID>"+TERMTYPEID+"</termTypeID><acqBIN>"+ACQBIN+"</acqBIN><fwdBIN>"+FWDBIN+"</fwdBIN><userID>"+userID+"</userID><merID>"+MERID+"</merID><name>"+MERNAME+"</name></Merchant><Purchase><icCondCode>0</icCondCode><termAcAbility>0</termAcAbility><termID>"+TERMID+"</termID><traceNum>"+TRACENUM+"</traceNum><date>"+DATE+"</date><currency>156</currency></Purchase><ChInfo><certType>"+certType+"</certType><number>"+certiCode+"</number><name>"+CHINFONAME+"</name></ChInfo><CntInfo><mobile>"+mobile+"</mobile></CntInfo><channelType>"+CHANNELTYPE+"</channelType><PubKeyIndex>"+PUBKEYINDEX+"</PubKeyIndex><tranCheckMode>"+tranCheckMode+"</tranCheckMode><SecRelContInfo>"+secRelContInfo+"</SecRelContInfo></TVPaybody><SecureData></SecureData><Mac></Mac></TVPay>";	

	var outAccount = cardId;
	var inAccount = "0";
	var transPasswd = cardPassword;
	var expiryDate = cardExpireDate;
	var random = "0";
	var cvn2 = cardCVN2;
var answer=tvPay(IPADDR,PORT,TIMEOUT,0,outAccount.toString(),inAccount.toString(),cardPassword.toString(),expiryDate.toString(),dynamicPasswd,random.toString(),cvn2.toString(),msgstr,null);
return answer;
	
}
//发送手机动态密码
function sendMobilePswd(termUnitNo,userId,cardType,cardId,cardPassword,cardExpireDate,cardCVN2,tranCheckMode,entryCode,mobileNo){
	var msgstr = "<?xml version='1.0' encoding='UTF-8' ?><TVPay><Mac></Mac><SecureData>0</SecureData><TVPaybody><TermStatus>0</TermStatus><ProCode></ProCode><Msg><version>1000</version><typeID>0200</typeID></Msg><ProcessingCode>340000</ProcessingCode><EntryCode>"+entryCode+"</EntryCode><PosCondCode>00</PosCondCode><acctNum>"+cardId+"</acctNum><cardType>"+cardType+"</cardType><Merchant><termUnitNo>"+termUnitNo+"</termUnitNo><termTypeID>"+TERMTYPEID+"</termTypeID><acqBIN>"+ACQBIN+"</acqBIN><fwdBIN>"+FWDBIN+"</fwdBIN><userID>"+userId+"</userID><merID>"+MERID+"</merID><name>"+MERNAME+"</name></Merchant><Purchase><icCondCode>0</icCondCode><termAcAbility>0</termAcAbility><termID>"+TERMID+"</termID><traceNum>"+TRACENUM+"</traceNum><date>"+DATE+"</date></Purchase><RcvInstId></RcvInstId><ChInfo><name>"+CHINFONAME+"</name></ChInfo><CntInfo><mobile>"+mobileNo+"</mobile></CntInfo><PubKeyIndex>"+PUBKEYINDEX+"</PubKeyIndex><tranCheckMode>"+tranCheckMode+"</tranCheckMode><Extension></Extension></TVPaybody></TVPay>";
	var outAccount = cardId;
	var inAccount = "0";
	var transPasswd = cardPassword;
	var expiryDate = cardExpireDate;
	var dynamicPasswd = "0";
	var random = "0";
	var cvn2 = cardCVN2;
var answer=tvPay(IPADDR,PORT,TIMEOUT,0,outAccount.toString(),inAccount.toString(),cardPassword.toString(),expiryDate.toString(),dynamicPasswd,random.toString(),cvn2.toString(),msgstr,null);
return answer;
}
function pay(tppAddress, tppPort, termUnitNo, userId, pubKeyIndex, termStatus, traceNum, merID, merName, date, acqBIN, fwdBIN, tp, termID, timeout, cardNo, orderNum, orderInfo,cardType, cardPassword,cardExpireDate,cardCVN2,tranCheckMode,secRelContInfo,entryCode,mobileNo,purchAmount,safetyVerifyMode,certType,certiCode){

	var msgstr = "<?xml version='1.0' encoding='UTF-8'?><TVPay><TVPaybody><Msg><version>1000</version><typeID>0200</typeID></Msg><TermStatus>"+termStatus+"</TermStatus><ProcessingCode>000000</ProcessingCode><xtype>19</xtype><EntryCode>"+entryCode+"</EntryCode><xclass>XF</xclass><PosCondCode>81</PosCondCode><orderNum>"+orderNum+"</orderNum><acctNum>"+cardNo+"</acctNum><cardType>"+cardType+"</cardType><safetyVerifyMode>"+safetyVerifyMode+"</safetyVerifyMode><Merchant><termUnitNo>"+termUnitNo+"</termUnitNo><termTypeID>"+TERMTYPEID+"</termTypeID><acqBIN>"+acqBIN+"</acqBIN><fwdBIN>"+fwdBIN+"</fwdBIN><userID>"+userId+"</userID><merID>"+merID+"</merID><name>"+merName+"</name><tp>"+tp+"</tp><OrderInfo>"+orderInfo+"</OrderInfo></Merchant><Purchase><icCondCode>0</icCondCode><termAcAbility>0</termAcAbility><termID>"+termID+"</termID><traceNum>"+traceNum+"</traceNum><date>"+date+"</date><purchAmount>"+purchAmount+"</purchAmount><currency>156</currency></Purchase><ChInfo><certType>"+certType+"</certType><number>"+certiCode+"</number></ChInfo><CntInfo><mobile>"+mobileNo+"</mobile></CntInfo><channelType>"+CHANNELTYPE+"</channelType><PubKeyIndex>"+pubKeyIndex+"</PubKeyIndex><tranCheckMode>"+tranCheckMode+"</tranCheckMode><SecRelContInfo>"+secRelContInfo+"</SecRelContInfo></TVPaybody><SecureData></SecureData><Mac></Mac></TVPay>";
	
	var outAccount = cardNo;
	var inAccount = "";
	var random = "0";
	var dynamicPasswd = "";
var answer=tvPay(tppAddress,tppPort,timeout,0,outAccount.toString(),inAccount.toString(),cardPassword.toString(),cardExpireDate.toString(),dynamicPasswd,random.toString(),cardCVN2.toString(),msgstr,null);
return answer;
} 
/* */
function  tvPay(IPADDR,PORT,TIMEOUT,TVP_TRANSINFO,outAccount,inAccount,cardPassword,expiryDate,dynamicPasswd,randomString,cvn2,msgstr,embedObj){
		 var embedObj=document.getElementById("embedObj");		 
		 PORT=Number(PORT);
		 TIMEOUT=Number(TIMEOUT);		
		//调用我们自己的支付控件
		var returnString = embedObj.LandiProcessControl(IPADDR,PORT,TIMEOUT,0,outAccount.toString(),inAccount.toString(),cardPassword.toString(),expiryDate.toString(),dynamicPasswd.toString(),randomString.toString(),cvn2.toString(),msgstr,"99");
		var ret=returnString.split('\r\n');
		//兼容emu环境
		if(ret.length==4){
			ret[1]=ret[1]+ret[2];
		}
		return ret;
}
function KeyBoard(id, keyId,backId,okId,closeFouceId) {
    this.keyBoardObject = document.getElementById(id);
    this.keyIdObject = document.getElementById(keyId);
    this.keyBackObject = document.getElementById(backId);
    this.keyOKObject = document.getElementById(okId);
    this.pin = new Array(6);
    this.imgPath = "../img/vk/";
    this.closeFouceId = closeFouceId;
}
KeyBoard.prototype.open = function(p) {
    document.getElementById("errorInfo").innerHTML = "";//清除报错信息提示
    this.keyBoardObject.style.display = 'block';
    this.initKeyBoard();
    this.pinObject = p;
}
KeyBoard.prototype.close = function(move) {
    if(move) this.focusMove();
    this.keyBoardObject.style.display = 'none';    
}
KeyBoard.prototype.initKeyBoard = function() {
    var str = "<table border=\"0\" cellspacing=\"0\" cellpadding=\"0\">";
    str += "<tr>";
    KeyBoardUI.imgPath = this.imgPath;
    KeyBoardUI.init("keyBoard");
    var keyArray = KeyBoardUI.UI_KEY_ARRAY;
    for (var i = 0; i < keyArray.length; i++) {
        str += "<td width=\"52\" height=\"72\">";
        str+=keyArray[i];
        str+="</td>";
        if (i == 4) str += "</tr><tr>";
    }
    str += "</tr></table>";
    this.keyIdObject.innerHTML = str;
    document.getElementById('KeyBoardKey_0').focus();
    this.keyBackObject.innerHTML = KeyBoardUI.UI_BACK;
    this.keyOKObject.innerHTML = KeyBoardUI.UI_OK;
}

KeyBoard.prototype.addPin = function(num) {
    for (var i = 0; i < this.pin.length; i++) {
        if (this.pin[i] == null) {
            this.pin[i] = num;
            break;
        }
    }
    this.push();
}

KeyBoard.prototype.push = function() {
    this.pinObject.value = "";
    for (var i = 0; i < this.pin.length; i++) {
        if (this.pin[i] != null) {
            this.pinObject.value += '*';
        }
    }
}

KeyBoard.prototype.getPin = function(){
   var s = "";
    for(var i=0;i<this.pin.length;i++){
        if(this.pin[i]!=null){
            s+=this.pin[i];
        }
    }
    return s;
}

KeyBoard.prototype.backPin = function() {
    for (var i = this.pin.length - 1; i >= 0; i--) {
        if (this.pin[i] != null) {
            this.pin[i] = null;
            break;
        }
    }
    this.push();
}

KeyBoard.prototype.focusMove = function(){
    if(this.closeFouceId!=null){
       var obj = document.getElementById(this.closeFouceId);
    if(obj!=null) obj.focus();
    }
}
var UI = {
    type:0,//0 test; 1 tv
    UI_CERT:null,
    UI_MOBILE:null,
    UI_DEBT_CARD_ID:null,      //借记卡卡号UI
    UI_DEBT_CARD_PIN:null,     //借记卡密码UI
    UI_SMS_CODE:null,          //手机动态码UI
    UI_CREDIT_CARD_ID:null,    //信用卡卡号UI
    UI_CREDIT_CARD_CVN2:null,  //信用卡ＣＶＮ２UI
    UI_CREDIT_CARD_YEAR:null,  // 信用卡有效期（年份）UI
    UI_CREDIT_CARD_MONTH:null, //信用卡有效期（月份） UI


    init : function(keyBoardName) {
        if (this.type == 1) {
            var msgstr = "<Req><ReqType>0002</ReqType><Length>18|11|22|6|8|22|3|2|2</Length><ActionName>" + keyBoardName + "</ActionName></Req>";
            var answer = tvPay("999.999.999.999", 9999, 1000, "", "", "", "", "", "", "", msgstr, null);
            this.UI_CERT = getElementsFromXml(answer[1], "Cert");
            this.UI_MOBILE = getElementsFromXml(answer[1], "Mobile");
            this.UI_DEBT_CARD_ID = getElementsFromXml(answer[1], "DebtCard");
            this.UI_DEBT_CARD_PIN = getElementsFromXml(answer[1], "DebtPin");
            this.UI_SMS_CODE = getElementsFromXml(answer[1], "SmsCode");
            this.UI_CREDIT_CARD_ID = getElementsFromXml(answer[1], "CreditCard");
            this.UI_CREDIT_CARD_CVN2 = getElementsFromXml(answer[1], "CVN2");
            this.UI_CREDIT_CARD_YEAR = getElementsFromXml(answer[1], "Year");
            this.UI_CREDIT_CARD_MONTH = getElementsFromXml(answer[1], "Month");
            //"<Res><ReqType>0002</ReqType><Cert></Cert><Mobile></Mobile><DebtCard></DebtCard><DebtPin></DebtPin><SmsCode></SmsCode><CreditCard></CreditCard><CVN2></CVN2><Year></Year><Month></Month></Res>";
        } else if (this.type == 0) {
            var length = "18|11|22|6|8|22|3|2|2".split("|", -1);
            this.UI_CERT = "<input class=\"cert_input\" type=\"text\" id=\"certNo\" maxlength=\"" + length[0] + "\" onfocus=\"hint.clean(this)\"/>"
            this.UI_MOBILE = "<input class=\"mobile_input\" type=\"text\" id=\"mobile\" maxlength=\"" + length[1] + "\" onfocus=\"hint.clean(this)\"/>"
            this.UI_DEBT_CARD_ID = "<input class=\"debt_card_num\" type=\"text\" id=\"debt_cardId\" maxlength=\"" + length[2] + "\" onfocus=\"" + keyBoardName + ".close()\"/>"
            this.UI_DEBT_CARD_PIN = "<input class=\"debt_card_password\" type=\"password\" id=\"debt_pin\" maxlength=\"" + length[3] + "\" onfocus=\"" + keyBoardName + ".open(this)\" />"
            this.UI_SMS_CODE = "<input class=\"mobile_code\" type=\"text\" id=\"verifyCode\" maxlength=\"" + length[4] + "\" onfocus=\"" + keyBoardName + ".close()\" disabled=\"true\" />"
            this.UI_CREDIT_CARD_ID = "<input class=\"credit_card_num\" type=\"text\" id=\"credit_cardId\" maxlength=\"" + length[5] + "\" onfocus=\"" + keyBoardName + ".close()\"/>"
            this.UI_CREDIT_CARD_CVN2 = "<input class=\"cvn2_num\" type=\"text\" id=\"credit_cvn2\" maxlength=\"" + length[6] + "\" onfocus=\"" + keyBoardName + ".close()\"/>"
            this.UI_CREDIT_CARD_YEAR = "<input class=\"year\" type=\"text\" id=\"credit_year\" maxlength=\"" + length[7] + "\" onfocus=\"" + keyBoardName + ".close()\"/>"
            this.UI_CREDIT_CARD_MONTH = "<input class=\"month\" type=\"text\" id=\"credit_month\" maxlength=\"" + length[8] + "\" onfocus=\"" + keyBoardName + ".close()\"/>";
        }
    }
}
var KeyBoardUI = {
    type:0,
    UI_KEY_ARRAY:new Array(10),
    UI_BACK:null,
    UI_OK:null,
    imgPath:null,
    init : function(keyBoardName) {
        if (this.type == 1) {
            var msgstr = "<Req><ReqType>0001</ReqType><Path>" + this.imgPath + "</Path><ActionName>" + keyBoardName + "</ActionName></Req>";
            //            var resStr = "<Req><ReqType>0001</ReqType><KeyBack></KeyBack><KeyOk></KeyOk><KeyValue><Key0></Key0><Key1></Key1><Key2></Key2><Key3></Key3><Key4></Key4><Key5></Key5><Key6></Key6><Key7></Key7><Key8></Key8><Key9></Key9></KeyValue></Req>"

            var answer = tvPay("999.999.999.999", 9999, 1000, "", "", "", "", "", "", "", msgstr, null);
            this.UI_BACK = getElementsFromXml(answer[1], "KeyBack");
            this.UI_OK = getElementsFromXml(answer[1], "KeyOk");
            for (var i = 0; i < 10; i++) {
                this.UI_KEY_ARRAY[i] = getElementsFromXml(answer[1], "Key" + i);
            }
        } else if (this.type == 0) {
            this.UI_BACK = " <a id=\"KeyBoard_Back\" href=\"javascript:return false\" onclick=\"" + keyBoardName + ".backPin()\"> <img  src=\"" + this.imgPath + "houtui.png\" /> </a> ";
            
            this.UI_OK = " <a  id=\"KeyBoard_OK\" href=\"javascript:return false\" onclick=\"" + keyBoardName + ".close(true)\" > <img  src=\"" + this.imgPath + "queren.png\" /> </a> ";
            
            var charr = this.getRandomArray();
            for (var i = 0; i < charr.length; i++) {
                this.UI_KEY_ARRAY[i] = " <a id=\"KeyBoardKey_" + i + "\"  href=\"javascript:return false\"  ><img  src=\"" + this.imgPath + charr[i] + ".png\"  onclick=\"" + keyBoardName + ".addPin(" + charr[i] + ")\"/></a> ";
            }
        }
    },
    getRandomArray : function() {
        var arr = new Array();
        while (arr.length < 10) {
            var num = Math.floor(Math.random() * 10);
            if (arr.toString().indexOf(num + "") == -1) {
                arr.push(num);
            }
        }
        return arr;
    }
}
var userId = request.getParameter("userId");
var termUnitNo = request.getParameter("termUnitNo");
var mobile = request.getParameter("mobile");
var certType = request.getParameter("certType");
var certNo = request.getParameter("certNo");
var traceNum= new Array();
traceNum = request.getParameter("traceNum").split(",");
var traceArrayNo = 1;
redirect.setParameter("userId", userId);
redirect.setParameter("termUnitNo", termUnitNo);
UI.init('keyBoard');
hint.show('DebtCardDIV',UI.UI_DEBT_CARD_ID);
hint.show('DebtPinDIV',UI.UI_DEBT_CARD_PIN);
hint.show('CreditCardDIV',UI.UI_CREDIT_CARD_ID);
hint.show('CreditCardCVN2',UI.UI_CREDIT_CARD_CVN2);
hint.show('CreditCardYear',UI.UI_CREDIT_CARD_YEAR);
hint.show('CreditCardMonth',UI.UI_CREDIT_CARD_MONTH);
hint.show('SMSCodeDIV',UI.UI_SMS_CODE);
var divs = ['debt_card_div','credit_card_div'];
var fous = ['debt_cardId','credit_cardId']
document.getElementById(fous[0]).focus();
function goBack(url) {
    redirect.setParameter("mobile", request.getParameter("mobile"));
    redirect.setParameter("certType", request.getParameter("certType"));
    redirect.setParameter("certNo", request.getParameter("certNo"));
    redirect.goto(url);
}
function changeDiv(i) {
    document.getElementById("errorInfo").innerHTML = "";
    document.getElementById("verifyCode").value = "";

    document.getElementById("bindType").value = i;
    document.getElementById(divs[i]).style.display = 'block';
    document.getElementById(divs[i == 0 ? 1 : 0]).style.display = 'none';
    document.getElementById(fous[i]).focus();
}
var keyBoard = new KeyBoard("keybord", "keynum",'keyBackID','keyOKID','sms_send_button');
function sendSmsVerifyCode() {
	if(traceArrayNo==traceNum.length)
	{
	hint.show("smshint","您获取的验证码已超过限制数");
	return;
	}
    document.getElementById('verifyCode').disabled = false;
    
	if(document.getElementById("credit_year")){
		document.getElementById("credit_year").style.backgroundColor="#044D63";
	};
	if(document.getElementById("credit_cvn2")){
		document.getElementById("credit_cvn2").style.backgroundColor="#044D63";
	};
    TRACENUM = traceNum[traceArrayNo];
    DATE = request.getParameter("date");
	ORDERNUM = DATE+TRACENUM;
	traceArrayNo++;
    var cardNo;
	var bindType = document.getElementById("bindType").value;
	if (bindType == '0') { //借记卡绑定
		cardNo = document.getElementById("debt_cardId").value;
	}else{
		cardNo = document.getElementById("credit_cardId").value;
	}
		var result = sendMobilePswd(termUnitNo,userId,bindType,cardNo,'','','','0110010010000000','012',mobile);
 	if(result[0]=='00'){
		hint.show("smshint","动态码成功发送到 "+mobile);
 	}else{
		hint.show("smshint","发送手机动态码超时");
	}
	document.getElementById("verifyCode").focus();
}
function bindCard() {
    TRACENUM = traceNum[0];
    DATE = request.getParameter("date");
	ORDERNUM = DATE+TRACENUM;
    function checkNums(checkAmount_input){
        var checkAmount_num = '0123456789';
        var checkAmount_inputNum = checkAmount_num.split("");
        var checkAmount_inputChar = checkAmount_input.split("");
        var checkAmount_error = false;
        
        for(i in checkAmount_inputChar){
            checkAmount_sameMe = false;
            for(j in checkAmount_inputNum){
                if(checkAmount_inputChar[i] == checkAmount_inputNum[j]) checkAmount_sameMe = true;
            }
            if(!checkAmount_sameMe){
               // alert('Error input - '+ checkAmount_inputChar[i]);
                checkAmount_error = true;
                break;
            }
        }
        if(checkAmount_input == ''|| checkAmount_input.length==0){
            //alert('Blank!');    
            checkAmount_error = true;
        }
        return checkAmount_error;
    }
	if (document.getElementById("bindType").value == '0') { //借记卡绑定
		var cardNo = document.getElementById("debt_cardId").value;
		var pin = keyBoard.getPin();
		var dyCode = document.getElementById("verifyCode").value;
		 //添加表单验证
		   //添加借记卡验证
        if(checkTableInput.chkDebtcardNum(cardNo)){
        	// alert(checkTableInput.chkDebtcardNum(cardNo));
            document.getElementById("errorInfo").innerHTML = checkTableInput.chkDebtcardNum(cardNo);
        	return;
        }
            //添加密码验证
            if(checkTableInput.chkPwd(pin)){
            	// alert(checkTableInput.chkPwd(pin));
                document.getElementById("errorInfo").innerHTML = checkTableInput.chkPwd(pin);
            	return;
            }
	    //动态密码
        if(checkTableInput.chkDynamicPwd(dyCode)){
        	// alert(checkTableInput.chkDynamicPwd(dyCode));
            //document.getElementById("errorInfo").innerHTML = checkTableInput.chkDynamicPwd(dyCode);
            hint.show("smshint",checkTableInput.chkDynamicPwd(dyCode));
       	return;
        }
		debtCardBind(userId, termUnitNo, certType, certNo, mobile, cardNo, pin, dyCode);
	} else {//贷记卡绑定
		var cardNo = document.getElementById("credit_cardId").value;
 		var cvn2 = document.getElementById("credit_cvn2").value;
		var year = document.getElementById("credit_year").value;
		var month = document.getElementById("credit_month").value;
		var dyCode = document.getElementById("verifyCode").value;
		  //添加信用卡验证
      if(checkTableInput.chkCreditcardNum(cardNo)){
          document.getElementById("errorInfo").innerHTML = checkTableInput.chkCreditcardNum(cardNo);
     	return;
      }
      //cv2
      if(checkTableInput.chkCvnNum(cvn2)){
           document.getElementById("errorInfo").innerHTML = checkTableInput.chkCvnNum(cvn2);
     	return;
      }
      //月
      if(checkTableInput.chkMonth(month)){
             document.getElementById("errorInfo").innerHTML = checkTableInput.chkMonth(month);
    	return;
      }
      //年
      if(checkTableInput.chkYear(year)){
             document.getElementById("errorInfo").innerHTML = checkTableInput.chkYear(year);
      	return;
      }
      //动态密码
      if(checkTableInput.chkDynamicPwd(dyCode)){
         // document.getElementById("errorInfo").innerHTML = checkTableInput.chkDynamicPwd(dyCode);
          hint.show("smshint", checkTableInput.chkDynamicPwd(dyCode));
    	return;
      }
 		creditCardBind(userId, termUnitNo, certType, certNo, mobile, cardNo, cvn2, year, month, dyCode);
	}
}

function debtCardBind(userId, termUnitNo, certType, certNo, mobile, cardNo, pin, dyCode) {
    var result = cardBinding(termUnitNo, userId, mobile, certNo, cardNo, '0', pin, '', '', '1010000010000000', '1000000000000000', '011', dyCode, certType);
    if (result[0] == '00') {
        redirect.setParameter("cardId", getStarCard(cardNo));
        redirect.setParameter("certType", certType);
        redirect.setParameter("certNo", certNo);
        redirect.setParameter("mobile", mobile);
        redirect.goto('./successBinding.html');
    } else {
        redirect.setParameter("cardId", getStarCard(cardNo));
        redirect.setParameter("certType", certType);
        redirect.setParameter("certNo", certNo);
        redirect.setParameter("mobile", mobile);
        redirect.setParameter("respCode", result[0]);
        redirect.goto('./errorBinding.html');
    }
}

function creditCardBind(userId, termUnitNo, certType, certNo, mobile, cardNo, cvn2, year, month, dyCode) {
    var result = cardBinding(termUnitNo, userId, mobile, certNo, cardNo, '1', '', year + month, cvn2, '0110010010000000', '1000000000000000', '012', dyCode, certType);
    if (result[0] == '00') {
        redirect.setParameter("cardId", getStarCard(cardNo));
        redirect.setParameter("certType", certType);
        redirect.setParameter("certNo", certNo);
        redirect.setParameter("mobile", mobile);
        redirect.goto('./successBinding.html');
    } else {
        redirect.setParameter("cardId", getStarCard(cardNo));
        redirect.setParameter("certType", certType);
        redirect.setParameter("certNo", certNo);
        redirect.setParameter("mobile", mobile);
        redirect.setParameter("respCode", result[0]);
        redirect.goto('./errorBinding.html');
    }
}

function getStarCard(cardNo) {
    if (cardNo.length < 10) return cardNo;
    return cardNo.substr(0, 6) + "******" + cardNo.substr(cardNo.length - 4, 4);
}
</script> 
<script>
//页面返回用的的URL
var backURL = request.getParameter("backURL"); 
if(!backURL){
	backURL = "../index.html";
}
</script>
<script type="text/javascript">
var checkTableInput = {
	msgId :["请输入身份证号码","身份证位数错误","身份证输入错误"], //身份证
	msgCvn2 :["请输入CVN2","CVN2位数错误","CVN2输入错误"], //信用卡CVN2
	msgMonth :["请输入有效期月份","有效期月份错误","有效期月份不是数字"], //信用卡月份
	msgYear :["请输入有效期年份","有效期年份错误","有效期年份不是数字"], //信用卡年份
	msgDebtcardNum :["请输入借记卡卡号","借记卡卡号错误","卡号包含错误字符"], //信用卡卡号
	msgCreditcardNum :["请输入信用卡卡号","信用卡卡号错误","卡号包含错误字符"], //信用卡卡号
	msgMobile :["请输入手机号码","手机号码位数错误","手机号码输入错误"], //手机号错误信息
	msgPwd :["请输入密码","密码位数错误","密码输入错误"], //密码错误信息
	msgDynamicPwd :["请输入手机验证码","手机验证码位数错误","手机验证码输入错误"],//动态密码
	msgAmount :["请输入金额","金额错误"],//动态密码
	//验证身份证号
	chkIdNum : function(idNum){
		if (idNum == "" || idNum == null || idNum == "null" || idNum.length == 0) {
			return this.msgId[0]
		} else if (idNum.length!=15 && idNum.length!=18 ) {
			return this.msgId[1]
		} else if (isNaN(idNum.slice(0,-1)) ) {
			return this.msgId[2]
		} else {
			return false
		};
	},
	//验证CVN2
	chkCvnNum : function(cvnNum){
		if (cvnNum == "" || cvnNum == null || cvnNum == "null" || cvnNum.length == 0) {
			return this.msgCvn2[0]
		} else if (cvnNum.length!=3 ) {
			return this.msgCvn2[1]
		} else if(isNaN(cvnNum)){
			return this.msgCvn2[2]
		}else {
			return false
		};
	},
	//验证信用卡月份
	chkMonth : function(month){
		if (month == "" || month == null || month == "null" || month.length == 0) {
			return this.msgMonth[0]
		} else if (month.length>2) {
			return this.msgMonth[1]
		} else if (month>12||month<=0) {
			return this.msgMonth[1]
		} else if (isNaN(month)){
			return this.msgMonth[2]
		} else {
			return false
		};
	},
	//验证信用卡年份
	chkYear : function(year){
		if (year == "" || year == null || year == "null" || year.length == 0) {
			return this.msgYear[0]
		} else if (year.length!=2 ) {
			return this.msgYear[1]
		} else if (year>99||year<12) {
			return this.msgYear[1]
		} else if (isNaN(year)) {
			return this.msgYear[2]
		} else {
			return false
		};
	},
	//验证借记卡卡号
	chkDebtcardNum : function(debtcardNum){
		if (debtcardNum == "" || debtcardNum == null || debtcardNum == "null" || debtcardNum.length == 0) {
			return this.msgDebtcardNum[0]
		} else if (debtcardNum.length>19 || debtcardNum.length<16) {
			return this.msgDebtcardNum[1]
		} else if (isNaN(debtcardNum)) {
			return this.msgDebtcardNum[2]
		} else {
			return false
		};
	},
	//验证信用卡卡号
	chkCreditcardNum : function(creditcardNum){
		if (creditcardNum == "" || creditcardNum == null || creditcardNum == "null" || creditcardNum.length == 0) {
			return this.msgCreditcardNum[0]
		} else if (creditcardNum.length!=16 ) {
			return this.msgCreditcardNum[1]
		} else if (isNaN(creditcardNum)) {
			return this.msgCreditcardNum[2]
		} else {
			return false
		};
	},
	//判断手机号码
	chkMobile : function(mobile){
		if (mobile == "" || mobile == null || mobile == "null" || mobile.length == 0) {
			return this.msgMobile[0]
		} else if (mobile.length!=11) {
			return this.msgMobile[1]
		} else if (mobile.indexOf("0")==0||isNaN(mobile)) {//判断是否0开头和是否是数字
			return this.msgMobile[2]
		} else {
			return false
		};
	},
	//判断密码
		chkPwd : function(pwd){
		if (pwd == "" || pwd == null || pwd == "null" || pwd.length == 0) {
			return this.msgPwd[0]
		} else if (pwd.length!=6) {
			return this.msgPwd[1]
		} else if (isNaN(pwd)) {//判断是否0开头和是否是数字
			return this.msgPwd[2]
		} else {
			return false
		};
	},
	//判断动态码
		chkDynamicPwd : function(dynamicPwd){
		if (dynamicPwd == "" || dynamicPwd == null || dynamicPwd == "null" || dynamicPwd.length == 0) {
			return this.msgDynamicPwd[0]
		} else if (dynamicPwd.length!=6) {
			return this.msgDynamicPwd[1]
		} else if (isNaN(dynamicPwd)) {//判断是否是数字
			return this.msgDynamicPwd[2]
		} else {
			return false
		};
	},
	//判断金额
		chkAmount : function(amount){
		if (amount == "" || amount == null || amount == "null" || amount.length == 0) {
			return this.msgAmount[0]
		} else if (isNaN(amount)) {//判断是否是数字
			return this.msgAmount[1]
		} else {
			return false
		};
	}
}
</script>
</body>
<div id='embedObjDiv' ></div>
<script type="text/javascript">
TVPayTransManager.init('embedObjDiv','embedObj');
</script>
</html>
